<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>